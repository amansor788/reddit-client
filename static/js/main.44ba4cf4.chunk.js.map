{"version":3,"sources":["reducers/selectReducer.js","reducers/index.js","reducers/postReducer.js","actions/types.js","apis/posts.js","components/RedditListItem.js","actions/index.js","components/RedditList.js","components/RedditDetail.js","components/App.js","index.js"],"names":["getPostSelector","state","postFound","posts","find","post","data","id","selectedPostId","combineReducers","arguments","length","undefined","action","type","payload","Object","objectSpread","defineProperty","map","visited","filter","axios","create","baseURL","RedditListItem","_this","this","props","react_default","a","createElement","className","onClick","selectPost","concat","author","moment","fromNow","src","thumbnail","includes","alt","title","dismissPost","num_comments","React","Component","connect","RedditList","renderList","components_RedditListItem","key","fetchPosts","_this2","dismissAll","values","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","get","sent","children","stop","_x","apply","RedditDetail","href","url","target","App","components_RedditList","components_RedditDetail","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.44ba4cf4.chunk.js","sourcesContent":["import {SELECT_POST} from '../actions/types';\r\n\r\nexport default (state='', action) => {\r\n  switch (action.type) {\r\n    case SELECT_POST:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Selector\r\nexport const getPostSelector = (state) => {\r\n  const postFound = state.posts.find((post) => {\r\n    return post.data.id === state.selectedPostId});\r\n\r\n  return postFound ? postFound.data: null;\r\n};","import {combineReducers} from 'redux';\r\n\r\nimport postReducer from './postReducer';\r\nimport selectReducer from './selectReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postReducer,\r\n  selectedPostId: selectReducer,\r\n});","import {FETCH_POST, FETCH_POSTS, DISMISS_POST, SELECT_POST, DISMISS_ALL} from '../actions/types';\r\n\r\nexport default (state=[], action) => {\r\n  let newState;\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      return action.payload;\r\n    case FETCH_POST:\r\n      return {...state, [action.payload.id]: action.payload};\r\n    case SELECT_POST:\r\n      newState = state.map(post => {return post.data.id === action.payload ? {...post, data: {...post.data, visited: true}} : post});\r\n      return newState;\r\n    case DISMISS_POST:\r\n      newState = state.filter((post) => {\r\n        return post.data.id !== action.payload\r\n      });\r\n      return newState;\r\n    case DISMISS_ALL:\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n}","export const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const FETCH_POST = 'FETCH_POST';\r\nexport const SELECT_POST = 'SELECT_POST';\r\nexport const DISMISS_POST = 'DISMISS_POST';\r\nexport const DISMISS_ALL = 'DISMISS_ALL';","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://www.reddit.com'}\r\n);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\n\r\nimport '../css/RedditListItem.css';\r\nimport { selectPost, dismissPost } from '../actions';\r\n\r\nclass RedditListItem extends React.Component {\r\n  \r\n  render(){\r\n    const { post } = this.props;\r\n    \r\n    return(\r\n      <div className=\"item\" onClick={() => {this.props.selectPost(post.id)}}>\r\n       <div className=\"paddle\">\r\n         <i className={`bullseye icon ${post.visited ? `grey` : `blue`}`}></i>\r\n         {post.visited}\r\n         <span className=\"user\">{post.author}</span> \r\n         <span className=\"time-ago\">{moment(post).fromNow()}</span>\r\n       </div>\r\n       <div className=\"reddit-item paddle\">   \r\n          <img src={post.thumbnail.includes('https://') ? post.thumbnail : 'favicon.ico'} alt=\"alt\" />\r\n          <span className=\"title\">{post.title}</span>\r\n       </div>      \r\n       <div>\r\n        <button className=\"ui compact basic orange button tiny\" onClick={() => {this.props.dismissPost(post.id)}}>\r\n          <i className=\"icon close\"></i>\r\n            Dismiss Post\r\n        </button>\r\n        <span className=\"comment\">{post.num_comments} comments</span>\r\n       </div>\r\n      </div>\r\n   )\r\n  }\r\n}\r\n\r\nexport default connect(null, { selectPost, dismissPost }) (RedditListItem);","import {FETCH_POST, FETCH_POSTS, SELECT_POST, DISMISS_POST, DISMISS_ALL} from './types';\r\nimport posts from '../apis/posts';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await posts.get('/top/.json?limit=50');\r\n \r\n  dispatch(\r\n    {\r\n      type: FETCH_POSTS, \r\n      payload: response.data.data.children\r\n    });\r\n }\r\n\r\n export const selectPost = (id) => {\r\n   return {\r\n      type: SELECT_POST, \r\n      payload: id\r\n    }\r\n }\r\n\r\n export const dismissPost = (id) => {\r\n   return {\r\n     type: DISMISS_POST,\r\n     payload: id\r\n   }\r\n }\r\n\r\n export const dismissAll = () => {\r\n  return {\r\n    type: DISMISS_ALL,\r\n  }\r\n}\r\n\r\nexport const fetchPost = (id) => {\r\n  const request = posts.get(`posts/${id}`);\r\n\r\n  return {\r\n    type: FETCH_POST,\r\n    payload: request\r\n  };\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {fetchPosts, dismissAll} from '../actions';\r\n\r\nimport RedditListItem from './RedditListItem';\r\n//import Paginator from './Paginator';\r\nimport '../css/RedditListItem.css';\r\n\r\nclass RedditList extends React.Component { \r\n  componentDidMount(){\r\n    this.props.fetchPosts();\r\n  }\r\n\r\n  renderList = () => {\r\n    return this.props.posts.map(post => {\r\n      return <RedditListItem key={post.data.id} post={post.data} />\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"reddit-general-item cust\">\r\n        <div className=\"list-header\">\r\n          <h3>Reddit Posts</h3>\r\n          {/* <Paginator /> */}\r\n        </div>\r\n        <div className=\"ui relaxed divided list scroll-list\">\r\n          {this.renderList()}\r\n        </div>\r\n        <div className=\"list-footer\">\r\n          <button className=\"ui compact basic olive button tiny\" onClick={() => {this.props.dismissAll()}}>\r\n              Dismiss All\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: Object.values(state.posts),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPosts, dismissAll}) (RedditList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getPostSelector } from '../reducers/selectReducer';\r\n\r\nclass RedditDetail extends React.Component {\r\n  render(){\r\n    const { post } = this.props;\r\n\r\n    if (!post) { return <div>Please select a post to show...</div>}  \r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"ui cust\">\r\n           <h2>{post.author}</h2>\r\n           <a href={post.url} target=\"_blank\">\r\n            <img \r\n                src={post.thumbnail.includes('https://') ? post.thumbnail : 'favicon.ico'} \r\n                alt=\"alt\"/>\r\n            </a>\r\n           <p>{post.title}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    post: getPostSelector(state),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps) (RedditDetail);","import React from 'react';\n\nimport RedditList from './RedditList';\nimport RedditDetail from './RedditDetail';\n\nclass App extends React.Component {\n  render(){\n    return (\n        <div className=\"ui padded grid cust\">\n            <div className=\"six wide column cust\">\n              <RedditList />\n            </div>\n            <div className=\"ten wide column cust\">\n              <RedditDetail />\n            </div>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport reduxThunk from'redux-thunk';\nimport reducers from './reducers';\n\nimport './css/App.css';\nimport App from './components/App';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers,\n  composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n<Provider store={store}>\n<App/>\n</Provider>\n, document.querySelector('#root'));"],"sourceRoot":""}